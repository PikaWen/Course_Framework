@model Course_Framework.Models.DB.SE_Student
@{
    ViewBag.title = "_StudentEditArea";
    Layout = null;
}

<style>
    label.error {
        color: #ff0000;
    }
</style>
<form method="post" id="studentform">
    @{
        if (Model != null && Model.StudentNo > 0)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.StudentID, "學號", new { @class = "control-label" })
                @Html.TextBoxFor(m => m.StudentID, new { @class = "form-control", @placeholder = "學號", @readonly = true })
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.HiddenFor(m => m.StudentID, new { @class = "form-control", @placeholder = "學號" })
            </div>
        }
    }

    <div class="form-group">
        @Html.LabelFor(m => m.Name, "姓名", new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "姓名", @maxLength = 20 })
        <span class="text-danger" style="display: none" id="err_name">*請輸入姓名</span>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Birth, "生日", new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Birth, "{0:yyyy-MM-dd}", new { @class = "form-control timepicker", @placeholder = "生日" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, "Email", new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email", @type="email", @maxLength = 50 })
        <span class="text-danger" style="display: none" id="err_email">*請輸入Email</span>
    </div>
    @if (Model.StudentNo > 0)
    {
        <button type="button" class="btn btn-primary" onclick="Submit();">儲存</button>
    }
    else
    {
        <button type="button" class="btn btn-primary" onclick="Submit();">新增</button>
        <button type="reset" class="btn btn-primary" id="resetstudentform">清空</button>
    }



</form>

<script type="text/javascript">
    $(document).ready(function () {
        $("#Birth").datepicker({
            dateFormat: "yy-mm-dd",
            maxDate: new Date(),
            defaultDate: new Date(),
            minDate: new Date("1990/01/01")
        });

        $("#studentform").validate({
            rules: {
                Email: {
                    required: true,
                    email: true
                },
                Name: {
                    required: true
                }
            }
        });
    });

    function Submit() {
        var check = true;
        if (!$("#studentform").valid()) {
            check = false;
        }

        if (check) {
            var formdata = $("#studentform").serialize();
        $.ajax({
            method: "post",
            data: formdata + "&No=" + @Model.StudentNo ,
            dataType: "json",
            async: false,
            cache: false,
            url: '@Model.StudentNo' == '0' ? '@Url.Action("AddStudent", "Student", new { area = "Student" })' : '@Url.Action("UpdateStudent", "Student", new { area = "Student" })',
            success: function (result) {
                if (result.success) {
                    $("#resetstudentform").click();
                      GetStudentEditArea(0);
                      GetStudentList();
                  }
            }
        });
        }

    }


</script>